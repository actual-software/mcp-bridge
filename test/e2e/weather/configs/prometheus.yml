# Prometheus configuration for MCP E2E testing
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'mcp-monitor'
    environment: 'e2e-test'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Weather MCP Server metrics
  - job_name: 'weather-server'
    static_configs:
      - targets: ['weather-server:9090']
        labels:
          service: 'weather-mcp-server'
          component: 'mcp-server'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s

  # MCP Gateway metrics
  - job_name: 'mcp-gateway'
    static_configs:
      - targets: ['mcp-gateway:9090']
        labels:
          service: 'mcp-gateway'
          component: 'gateway'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s

  # Redis exporter (if using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          component: 'cache'
    scrape_interval: 30s

  # Node exporter for system metrics (optional)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          component: 'system'
    scrape_interval: 30s

  # Custom application metrics from Weather server
  - job_name: 'weather-custom'
    static_configs:
      - targets: ['weather-server:8080']
        labels:
          service: 'weather-mcp-server'
          component: 'custom-metrics'
    metrics_path: '/metrics/custom'
    scrape_interval: 15s

# Metric relabeling configurations
metric_relabel_configs:
  - source_labels: [__name__]
    regex: 'go_.*'
    action: drop  # Drop Go runtime metrics if not needed