# MCP Gateway configuration for Docker Compose setup
server:
  port: 8080
  host: 0.0.0.0
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  max_header_bytes: 1048576

upstream:
  endpoints:
    - url: ws://weather-server:8080/mcp
      weight: 100
      max_connections: 100
      health_check:
        enabled: true
        interval: 10s
        timeout: 5s
        unhealthy_threshold: 3
        healthy_threshold: 2
  
  load_balancer:
    algorithm: round_robin
    sticky_sessions: false
    session_affinity_cookie: mcp_session
    session_ttl: 3600s
  
  circuit_breaker:
    enabled: true
    threshold: 5
    timeout: 30s
    half_open_max_requests: 3
    error_threshold_percentage: 50

connection:
  pool:
    max_idle: 10
    max_open: 100
    connection_timeout: 30s
    idle_timeout: 90s
  
  websocket:
    read_buffer_size: 4096
    write_buffer_size: 4096
    enable_compression: true
    ping_interval: 30s
    pong_timeout: 10s
    max_message_size: 1048576

security:
  auth:
    enabled: false  # Disabled for testing
    type: bearer
    bearer:
      header_name: Authorization
      token_prefix: Bearer
      validation_url: http://auth-service/validate
      cache_ttl: 300s
      cache_size: 1000
  
  rate_limit:
    enabled: true
    requests_per_minute: 1000
    burst_size: 100
    per_ip: true
    whitelist:
      - 127.0.0.1
      - 172.28.0.0/16
  
  cors:
    enabled: true
    allowed_origins:
      - "*"
    allowed_methods:
      - GET
      - POST
      - OPTIONS
    allowed_headers:
      - "*"
    expose_headers:
      - X-Request-ID
    max_age: 86400
  
  tls:
    enabled: false
    cert_file: /certs/server.crt
    key_file: /certs/server.key
    client_auth: false
    client_ca_file: /certs/ca.crt

redis:
  enabled: true
  address: redis:6379
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 5
  max_retries: 3
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s

observability:
  metrics:
    enabled: true
    port: 9090
    path: /metrics
    namespace: mcp_gateway
    subsystem: ""
    buckets:
      - 0.001
      - 0.005
      - 0.01
      - 0.025
      - 0.05
      - 0.1
      - 0.25
      - 0.5
      - 1.0
      - 2.5
      - 5.0
      - 10.0
  
  logging:
    level: info
    format: json
    output: stdout
    include_caller: false
    include_stacktrace: error
    fields:
      service: mcp-gateway
      environment: docker
  
  tracing:
    enabled: true
    service_name: mcp-gateway
    sample_rate: 0.1
    exporter: jaeger
    jaeger:
      endpoint: http://jaeger:14268/api/traces
      agent_host: jaeger
      agent_port: 6831

health:
  liveness_path: /health/live
  readiness_path: /health/ready
  port: 8080
  include_details: true

middleware:
  - request_id
  - logger
  - recovery
  - metrics
  - rate_limit
  - auth

features:
  enable_websocket_compression: true
  enable_request_logging: true
  enable_response_logging: false
  enable_debug_endpoints: false
  enable_pprof: false