services:
  # Redis for gateway session/rate limit storage
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"  # Redis for session tests
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 3
    networks:
      - e2e-network

  # MCP Gateway
  gateway:
    build:
      context: ../../..
      dockerfile: services/gateway/Dockerfile
    restart: unless-stopped
    ports:
      - "8443:8443"  # HTTPS/WebSocket with TLS
      - "9091:9091"  # Metrics
      - "9092:9092"  # Health
    environment:
      - MCP_AUTH_TOKEN=test-e2e-token-12345
      - JWT_SECRET_KEY=test-jwt-secret-for-e2e-testing-only
      - MCP_GATEWAY_REDIS_URL=redis://redis:6379/0
      - MCP_GATEWAY_LOGGING_LEVEL=debug
      - MCP_GATEWAY_SERVICE_DISCOVERY_PROVIDER=static
      - MCP_GATEWAY_SESSIONS_PROVIDER=redis
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/health"]
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 5s
    volumes:
      - ./configs/gateway-test.yaml:/etc/mcp-gateway/gateway.yaml:ro
      - ./certs:/etc/mcp-gateway/tls:ro
    networks:
      - e2e-network

  # Test MCP Server
  test-mcp-server:
    build: ./test-mcp-server
    restart: unless-stopped
    environment:
      - PORT=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      - e2e-network

  # Optional: Prometheus for monitoring (can be enabled for debugging)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9093:9090"
    volumes:
      - ./configs/prometheus-test.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=1h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring
    networks:
      - e2e-network

networks:
  e2e-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes for persistent data (if needed)
volumes:
  redis-data:
  prometheus-data: