version: '3.8'

services:
  # MCP Gateway Service
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    image: mcp-gateway:v1.0.0
    container_name: mcp-gateway
    restart: unless-stopped
    ports:
      - "8443:8443"   # HTTPS/WSS
      - "9090:9090"   # Metrics
    environment:
      - MCP_ENV=production
      - MCP_LOG_LEVEL=info
      - MCP_GATEWAY_PORT=8443
      - MCP_METRICS_PORT=9090
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-auto-generated}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./config/gateway.yaml:/etc/mcp-gateway/config.yaml:ro
      - ./certs:/etc/mcp-gateway/certs:ro
      - gateway-logs:/var/log/mcp-gateway
    depends_on:
      - redis
    networks:
      - mcp-network
    healthcheck:
      test: ["/usr/local/bin/mcp-gateway", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # MCP Router Service  
  router:
    build:
      context: .
      dockerfile: Dockerfile.router
    image: mcp-router:v1.0.0
    container_name: mcp-router
    restart: unless-stopped
    ports:
      - "9091:9091"   # Metrics
    environment:
      - MCP_ENV=production
      - MCP_LOG_LEVEL=info
      - MCP_GATEWAY_URL=wss://gateway:8443/ws
      - MCP_AUTH_TOKEN=${MCP_AUTH_TOKEN}
    volumes:
      - ./config/router.yaml:/etc/mcp-router/config.yaml:ro
      - ./certs:/etc/mcp-router/certs:ro
      - router-logs:/var/log/mcp-router
    depends_on:
      - gateway
    networks:
      - mcp-network
    healthcheck:
      test: ["/usr/local/bin/mcp-router", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Redis for session storage and rate limiting
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    restart: unless-stopped
    ports:
      - "9092:9090"  # Changed to avoid conflict
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - mcp-network
    depends_on:
      - gateway
      - router
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - mcp-network
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  gateway-logs:
    driver: local
  router-logs:
    driver: local