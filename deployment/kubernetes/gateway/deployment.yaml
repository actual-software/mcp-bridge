apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-gateway
  namespace: mcp-system
  labels:
    app: mcp-gateway
    app.kubernetes.io/name: mcp-gateway
    app.kubernetes.io/component: gateway
    app.kubernetes.io/part-of: mcp-remote-bridge
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: mcp-gateway
  template:
    metadata:
      labels:
        app: mcp-gateway
        app.kubernetes.io/name: mcp-gateway
        app.kubernetes.io/component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mcp-gateway
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mcp-gateway
            topologyKey: kubernetes.io/hostname
      containers:
      - name: gateway
        image: ghcr.io/actual-software/mcp-bridge-gateway:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
          name: websocket
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: CONFIG_PATH
          value: "/etc/mcp-gateway/gateway.yaml"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mcp-gateway-secrets
              key: jwt-secret-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: mcp-gateway-secrets
              key: redis-url
        - name: LOG_LEVEL
          value: "info"
        - name: GOMAXPROCS
          value: "2"
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /etc/mcp-gateway
          readOnly: true
        - name: tls-certs
          mountPath: /etc/tls
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: config
        configMap:
          name: mcp-gateway-config
      - name: tls-certs
        secret:
          secretName: mcp-gateway-secrets
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key