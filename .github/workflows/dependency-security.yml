name: Dependency Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'

env:
  GO_VERSION: "1.21"

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: Generate Trivy Report
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          output: 'trivy-report.txt'
          
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          vulnerability-check: true
          license-check: true
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause

  osv-scan:
    name: OSV Scanner
    permissions:
      security-events: write
      contents: read
      actions: read
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.2.3

  license-scan:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install go-licenses
        run: |
          go install github.com/google/go-licenses@latest
          
      - name: Check licenses for Gateway
        run: |
          cd services/gateway
          go-licenses check ./... --allowed_licenses=MIT,Apache-2.0,BSD-3-Clause,BSD-2-Clause \
            --ignore github.com/poiley/mcp-bridge/services/gateway/internal

      - name: Check licenses for Router
        run: |
          cd services/router
          go-licenses check ./... --allowed_licenses=MIT,Apache-2.0,BSD-3-Clause,BSD-2-Clause \
            --ignore github.com/poiley/mcp-bridge/services/router/internal
          
      - name: Generate license report
        run: |
          cd services/gateway
          go-licenses report ./... > ../../gateway-licenses.csv
          cd ../router
          go-licenses report ./... > ../../router-licenses.csv
          
      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            gateway-licenses.csv
            router-licenses.csv