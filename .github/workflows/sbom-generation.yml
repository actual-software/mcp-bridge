name: SBOM Generation

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  go-version:
    uses: ./.github/workflows/_go-version.yml

  sbom-cyclonedx:
    name: Generate CycloneDX SBOM
    runs-on: ubuntu-latest
    needs: go-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
          
      - name: Install cyclonedx-gomod
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          
      - name: Generate SBOM for Gateway
        run: |
          cd services/gateway
          cyclonedx-gomod mod -json -output ../../sbom-gateway.json
          cyclonedx-gomod mod -output ../../sbom-gateway.xml
          
      - name: Generate SBOM for Router
        run: |
          cd services/router
          cyclonedx-gomod mod -json -output ../../sbom-router.json
          cyclonedx-gomod mod -output ../../sbom-router.xml
          
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: |
            sbom-gateway.json
            sbom-gateway.xml
            sbom-router.json
            sbom-router.xml

  sbom-syft:
    name: Generate Syft SBOM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          artifact-name: sbom-syft-spdx.json
          
      - name: Generate SBOM in multiple formats
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          
          # Generate SBOM for entire project
          syft . -o spdx-json=sbom-project-spdx.json
          syft . -o cyclonedx-json=sbom-project-cyclonedx.json
          
          # Generate SBOM for Gateway
          syft services/gateway -o spdx-json=sbom-gateway-spdx.json
          syft services/gateway -o cyclonedx-json=sbom-gateway-cyclonedx.json
          
          # Generate SBOM for Router
          syft services/router -o spdx-json=sbom-router-spdx.json
          syft services/router -o cyclonedx-json=sbom-router-cyclonedx.json
          
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-syft
          path: |
            sbom-*.json

  sbom-container:
    name: Generate Container SBOM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Gateway Container
        run: |
          docker build -t mcp-gateway:sbom -f services/gateway/Dockerfile .
          
      - name: Build Router Container
        run: |
          docker build -t mcp-router:sbom -f services/router/Dockerfile .
          
      - name: Generate Container SBOMs
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          
          syft mcp-gateway:sbom -o spdx-json=sbom-container-gateway.json
          syft mcp-router:sbom -o spdx-json=sbom-container-router.json
          
      - name: Upload Container SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sbom-containers
          path: |
            sbom-container-*.json

  sbom-sign:
    name: Sign and Attest SBOMs
    runs-on: ubuntu-latest
    needs: [sbom-cyclonedx, sbom-syft]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all SBOMs
        uses: actions/download-artifact@v4
        with:
          path: sboms
          
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        
      - name: Sign SBOMs
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Sign all SBOM files
          for sbom in sboms/**/*.json sboms/**/*.xml; do
            if [ -f "$sbom" ]; then
              cosign sign-blob --yes "$sbom" --output-signature "${sbom}.sig"
            fi
          done
          
      - name: Create SBOM attestation
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Create attestations for key SBOMs
          cosign attest-blob --yes --predicate sboms/sbom-cyclonedx/sbom-gateway.json \
            --type cyclonedx --output-file gateway-attestation.json \
            sboms/sbom-cyclonedx/sbom-gateway.json
            
          cosign attest-blob --yes --predicate sboms/sbom-cyclonedx/sbom-router.json \
            --type cyclonedx --output-file router-attestation.json \
            sboms/sbom-cyclonedx/sbom-router.json
            
      - name: Upload signed SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sbom-signed
          path: |
            sboms/**/*.sig
            *-attestation.json

  sbom-publish:
    name: Publish SBOMs
    runs-on: ubuntu-latest
    needs: [sbom-sign]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all SBOMs
        uses: actions/download-artifact@v4
        with:
          path: sboms
          
      - name: Create SBOM release archive
        run: |
          tar czf sboms-${{ github.ref_name }}.tar.gz sboms/
          
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            sboms-*.tar.gz
            sboms/**/*.json
            sboms/**/*.xml