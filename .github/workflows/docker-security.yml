name: Docker Security Scanning

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile.*'
      - 'services/**'
      - '.github/workflows/docker-security.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile.*'
      - 'services/**'
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_GATEWAY: ${{ github.repository }}/gateway
  IMAGE_NAME_ROUTER: ${{ github.repository }}/router

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        component: [gateway, router]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.${{ matrix.component }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        format: 'sarif'
        output: 'trivy-${{ matrix.component }}-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-${{ matrix.component }}-results.sarif'

    - name: Run Trivy vulnerability scanner (table format)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        format: 'table'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'

    - name: Run Grype vulnerability scanner
      uses: anchore/scan-action@v4
      id: grype
      with:
        image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        fail-build: true
        severity-cutoff: high
        acs-report-enable: true

    - name: Upload Grype scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ${{ steps.grype.outputs.sarif }}

    - name: Docker Scout scan
      if: github.event_name != 'pull_request'
      uses: docker/scout-action@v1
      with:
        command: cves
        image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        sarif-file: 'scout-${{ matrix.component }}-results.sarif'
        summary: true

    - name: Upload Docker Scout scan results
      if: github.event_name != 'pull_request'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'scout-${{ matrix.component }}-results.sarif'

    - name: Push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.${{ matrix.component }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-report:
    needs: build-and-scan
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Security scan summary
      run: |
        echo "## 🛡️ Docker Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scanned Components:" >> $GITHUB_STEP_SUMMARY
        echo "- Gateway container image" >> $GITHUB_STEP_SUMMARY
        echo "- Router container image" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Tools Used:" >> $GITHUB_STEP_SUMMARY
        echo "- **Trivy**: Comprehensive vulnerability scanner" >> $GITHUB_STEP_SUMMARY
        echo "- **Grype**: Anchore vulnerability scanner" >> $GITHUB_STEP_SUMMARY
        echo "- **Docker Scout**: Docker's security analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Results:" >> $GITHUB_STEP_SUMMARY
        echo "All scan results are uploaded to the Security tab for detailed analysis." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Build Status**: ${{ needs.build-and-scan.result }}" >> $GITHUB_STEP_SUMMARY