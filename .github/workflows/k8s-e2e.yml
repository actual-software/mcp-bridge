# GitHub Actions workflow for Kubernetes E2E testing
# Copy this to .github/workflows/k8s-e2e.yml in your repository root

name: Kubernetes E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - 'deployments/kubernetes/**'
      - 'helm/**'
      - 'test/e2e/k8s/**'
      - '.github/workflows/k8s-e2e.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - 'deployments/kubernetes/**'
      - 'helm/**'
      - 'test/e2e/k8s/**'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_pattern:
        description: 'Test pattern to run (optional)'
        required: false
        type: string
      debug_mode:
        description: 'Enable debug mode'
        required: false
        type: boolean
        default: false

env:
  GO_VERSION: '1.21'
  KIND_VERSION: 'v0.20.0'
  KUBECTL_VERSION: 'v1.28.0'

jobs:
  k8s-e2e-test:
    name: Kubernetes E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    strategy:
      fail-fast: false
      matrix:
        test-type:
          - name: "Basic E2E"
            pattern: "TestKubernetesEndToEnd"
            timeout: "20m"
          - name: "Performance"
            pattern: "TestKubernetesPerformance"
            timeout: "30m"
            skip_on_pr: true
          - name: "Failover" 
            pattern: "TestKubernetesFailover"
            timeout: "25m"
            skip_on_pr: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        cache-dependency-path: test/e2e/k8s/go.sum

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install KinD
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/${{ env.KIND_VERSION }}/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind version

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/${{ env.KUBECTL_VERSION }}/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/kubectl
        kubectl version --client

    - name: Free up disk space
      run: |
        # Remove unnecessary packages to free up space
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Set up test environment
      if: github.event_name != 'pull_request' || !matrix.test-type.skip_on_pr
      run: |
        cd test/e2e/k8s
        go mod tidy
        make check-prereqs

    - name: Run Kubernetes E2E Tests
      if: github.event_name != 'pull_request' || !matrix.test-type.skip_on_pr
      env:
        K8S_TEST_CLUSTER_NAME: mcp-e2e-test-${{ github.run_id }}
        K8S_TEST_NAMESPACE: mcp-e2e-${{ github.run_id }}
        K8S_DEBUG: ${{ github.event.inputs.debug_mode || 'false' }}
      run: |
        cd test/e2e/k8s
        TEST_PATTERN="${{ github.event.inputs.test_pattern || matrix.test-type.pattern }}"
        TIMEOUT="${{ matrix.test-type.timeout }}"

        echo "Running test: ${{ matrix.test-type.name }}"
        echo "Pattern: $TEST_PATTERN"
        echo "Timeout: $TIMEOUT"

        go test -run "$TEST_PATTERN" -v -timeout "$TIMEOUT"

    - name: Collect test artifacts
      if: always()
      run: |
        cd test/e2e/k8s
        # Create artifacts directory
        mkdir -p artifacts

        # Collect cluster information
        if kind get clusters | grep -q "mcp-e2e-test-${{ github.run_id }}"; then
          kubectl cluster-info --context kind-mcp-e2e-test-${{ github.run_id }} > artifacts/cluster-info.txt 2>&1 || true
          kubectl get all -n mcp-e2e-${{ github.run_id }} -o wide > artifacts/resources.txt 2>&1 || true
          kubectl get events -n mcp-e2e-${{ github.run_id }} --sort-by='.lastTimestamp' > artifacts/events.txt 2>&1 || true

          # Collect logs from all pods
          kubectl logs -n mcp-e2e-${{ github.run_id }} deployment/mcp-gateway -c gateway > artifacts/gateway-logs.txt 2>&1 || true
          kubectl logs -n mcp-e2e-${{ github.run_id }} deployment/mcp-gateway -c router > artifacts/router-logs.txt 2>&1 || true
          kubectl logs -n mcp-e2e-${{ github.run_id }} deployment/test-mcp-server > artifacts/mcp-server-logs.txt 2>&1 || true

          # Describe failed pods
          for pod in $(kubectl get pods -n mcp-e2e-${{ github.run_id }} --field-selector=status.phase!=Running -o name 2>/dev/null); do
            kubectl describe -n mcp-e2e-${{ github.run_id }} "$pod" > "artifacts/describe-${pod##*/}.txt" 2>&1 || true
          done
        fi

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: k8s-e2e-artifacts-${{ matrix.test-type.name }}-${{ github.run_id }}
        path: test/e2e/k8s/artifacts/
        retention-days: 7

    - name: Cleanup resources
      if: always()
      run: |
        # Cleanup KinD cluster
        kind delete cluster --name mcp-e2e-test-${{ github.run_id }} || true
        
        # Remove kubectl context
        kubectl config delete-context kind-mcp-e2e-test-${{ github.run_id }} || true
        
        # Clean up Docker resources
        docker system prune -af || true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: k8s-e2e-test
    if: always()
    
    steps:
    - name: Check results
      run: |
        if [[ "${{ needs.k8s-e2e-test.result }}" == "success" ]]; then
          echo "✅ All Kubernetes E2E tests passed!"
        elif [[ "${{ needs.k8s-e2e-test.result }}" == "skipped" ]]; then
          echo "⏭️ Kubernetes E2E tests were skipped"
        else
          echo "❌ Kubernetes E2E tests failed!"
          exit 1
        fi

    - name: Post summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const result = '${{ needs.k8s-e2e-test.result }}';
          const emoji = result === 'success' ? '✅' : result === 'skipped' ? '⏭️' : '❌';
          const status = result === 'success' ? 'passed' : result === 'skipped' ? 'skipped' : 'failed';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${emoji} Kubernetes E2E tests ${status}!
            
            **Test Results:**
            - Basic E2E: ${{ matrix.test-type.name == 'Basic E2E' && needs.k8s-e2e-test.result || 'Not run' }}
            - Performance: ${{ matrix.test-type.name == 'Performance' && needs.k8s-e2e-test.result || 'Skipped on PR' }}
            - Failover: ${{ matrix.test-type.name == 'Failover' && needs.k8s-e2e-test.result || 'Skipped on PR' }}
            
            View the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed logs and artifacts.`
          });